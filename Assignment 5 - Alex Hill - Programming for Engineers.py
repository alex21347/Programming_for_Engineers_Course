# -*- coding: utf-8 -*-
"""
Created on Wed Nov 27 14:30:15 2019

@author: alex
"""

#Programming for Engineers Assignment 5

#%%
#Review Exercise 1: Root finding

import numpy as np
from matplotlib import pyplot as plt

x = [-6.0, -5.555555555555555, -5.444444444444445, -5.333333333333333, -5.0, -4.777777777777778, -4.555555555555555, -4.333333333333334, -4.111111111111111, -3.555555555555556, -3.3333333333333335, -3.2222222222222223, -2.2222222222222223, -1.8888888888888893, -1.7777777777777777, -1.5555555555555554, -1.4444444444444446, -1.333333333333334, -1.2222222222222223, -1.1111111111111116, -0.7777777777777777, -0.5555555555555562, -0.3333333333333339, -0.22222222222222232, 0.33333333333333304, 0.5555555555555554, 0.6666666666666661, 0.8888888888888884, 1.0, 1.2222222222222214, 1.333333333333333, 1.4444444444444438, 1.666666666666666, 1.7777777777777777, 2.1111111111111107, 2.333333333333332, 2.5555555555555554, 2.777777777777777, 2.8888888888888893, 3.1111111111111107, 3.2222222222222214, 3.5555555555555554, 3.777777777777777, 4.0, 4.111111111111111, 4.222222222222221, 4.333333333333332, 4.444444444444445, 4.8888888888888875, 5.0]
y = [-306.0670724099247, -273.4252575751447, -236.35910170243054, -2.147806809067588, -162.88428946693543, -72.0539258242078, -49.64195238514043, -75.05934686306523, -49.40805793483066, -15.803160491117433, -20.408192287721462, -34.04243919689319, -2.6008654388252075, -0.33819910212586596, 0.5967691522163541, 1.955165125544544, 0.754741501848223, 3.1485956879192134, 0.2736824650635393, 2.535463038423905, 2.0383401626385638, 0.8371085078493934, 0.27326740330999844, -0.14152399821562134, -0.15792222719404883, -1.357836647665497, -4.064496618469092, -2.2060777524379893, -6.716174537753252, -2.381049714701943, -0.8951333867263299, -3.703956978393335, -5.121504730336851, -1.4824097773484555, -0.0658532580151797, 2.5527247901789907, 9.310234512028755, 7.839090794578473, 0.8239015424106111, 27.801254862532222, 33.099581728518, 17.182186572769048, 63.28883410018085, 38.47325866392358, 74.26392095969987, 100.73153613329536, 119.19508682705471, 46.85235728093459, 175.63882495054517, 118.62483544333234]

coeffs = np.polyfit(x, y, 3)
r = np.roots(coeffs)
x0=np.linspace(-6,5,100)
y0=coeffs[0]*x0**3+coeffs[1]*x0**2+coeffs[2]*x0+coeffs[3]

plt.figure()

plt.scatter(x,y,label="Data",color=(0.4,0.2,0.4),alpha=0.4)
plt.plot(x0,y0,label="Polynomial Approximation",color="b")
plt.legend()
plt.title("Review Exercise 1 : Root finding")
plt.plot([-6.5,5],[0,0],"k--")

for i in range(0,3):
    plt.plot([r[i],r[i]],[-25,25],"k--")
    
plt.show()
print()
print(f'The roots of the approximated function are {round(r[0],3)}, {round(r[1],3)} and {round(r[2],3)}')
#%%

#Review Exercise 2: Root Finding using an Initial Estimate

x = np.linspace(-15,15,1000)
y = np.cos(x)

plt.figure()
plt.plot(x,y)
plt.show()

originalguess = -5
a = originalguess - 1
b = originalguess + 1

for i in range(0,50):
    testa = np.cos(a)
    testb = np.cos(b)
    testmid = np.cos((b+a)/2)
    if testmid * testa > 0:
        a = (b+a)/2
    else:
        b = (b+a)/2
print()
print(f'The root closest to -5 is {round((b+a)/2,5)}, which is of course an approximation for {-3/2}pi')

    
    #%%
    
#Review Exercise 3: Systems of Equations

R1=1000
R2=300
R3=500
R4=1000
R5=300

v1 = 2
v2 = 5


A = np.array([[R1+R2, -R2, 0],
              [-R2, R2+R3+R4, -R4],
              [0, -R4, R4+R5]])

B = np.array([v1, 0, -v2])

x = np.linalg.solve(A, B)
print(f'[i1,i2,i3] = {x}')


#%%

#Review Exercise 4: Symbolic math

import sympy as sy

x, P, d, y = sy.symbols('x, P, d, y')

origeq = sy.Eq(y,(x**P)/(4*d))

xsubject = sy.solve(origeq, x)

rs = xsubject[0]

fulleq = sy.Eq(x,rs)

realsol = rs.subs([(P,12),
                   (d,4),
                   (y,2)])
    
print()
print(f'If y = (x**P)/(4*d) and')
print()
print(f'y = 2')
print(f'd = 4')
print(f'P = 12')
print()
print(f'Then x = {realsol}')


